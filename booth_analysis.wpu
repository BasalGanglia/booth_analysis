#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.breakpoints = {loc('../../Anaconda3/envs/ml/Lib/site-packages/mne/io/pick.py'): {891L: (0,
        None,
        1,
        0)}}
debug.err-values = {None: {},
                    loc('ECG_analyser.py'): {}}
debug.show-args-dialog = {loc('analysis_script.py'): False,
                          loc('fiddling_script.py'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'QZfaVazMN6F17Nd18ha3Psrntc'\
        'zvnm91',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.3763048016701461,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(11,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../Anaconda3/Lib/site-packages/sklearn/linear_model/base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../Anaconda3/Lib/site-packages/sklearn/linear_model/base.py'),
                      'center_data')]},
        loc('../../Anaconda3/Lib/socket.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../Anaconda3/Lib/socket.py'),
                      'create_connection')]},
        loc('../../Anaconda3/envs/twisted/Lib/site-packages/twisted/web/http.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../Anaconda3/envs/twisted/Lib/site-packages/twisted/web/http.py'),
                      'CACHED')]},
        loc('../../Anaconda3/lib/site-packages/sklearn/base.py'): {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../Anaconda3/lib/site-packages/sklearn/base.py'),
                      'BaseEstimator')]},
        loc('../../Anaconda3/lib/site-packages/sklearn/utils/validation.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../Anaconda3/lib/site-packages/sklearn/utils/validation.py'),
                      'assert_all_finite')]},
        loc('../handson-ml/my_version.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../handson-ml/my_version.py'),
                             'CHAPTER_ID')]],
        'top-node': [('generic attribute',
                      loc('../handson-ml/my_version.py'),
                      'CHAPTER_ID')]},
        loc('../myhandson/myscript.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../myhandson/myscript.py'),
                      'abba')]},
        loc('../sod_empatica/final_empatica.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../sod_empatica/final_empatica.py'),
                             'the_logger')]],
        'top-node': [('generic attribute',
                      loc('../sod_empatica/final_empatica.py'),
                      'args')]},
        loc('../twisted_book/dynamic_content.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../twisted_book/echoclient.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../twisted_book/echoclient.py'),
                      'EchoClient')]},
        loc('../twisted_book/echoserver.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../twisted_book/echoserver.py'),
                      'Echo')]},
        loc('../twisted_book/headlineRetriever.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../twisted_book/headlineRetriever.py'),
                      'd')]},
        loc('../twisted_book/print_resource.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../twisted_book/print_resource.py'),
                      'd')]},
        loc('../twisted_book/quoteserver.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../twisted_book/static_content.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../twisted_book/static_content.py'),
                      'factory')]},
        loc('unknown:<untitled> #1'): {'expanded-nodes': [],
                                       'selected-nodes': [None],
                                       'top-node': None},
        loc('unknown:<untitled> #2'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.3605588393336916,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'bio',
                                       'fReverse': False,
                                       'fSearchText': u'bio2',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('versioncontrol.git',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 11L,
                       'folded-linenos': [],
                       'history': {u'file:c:/Users/ilkka/code/booth_analysis/fiddling_script.py': ['p'\
        'icks\n',
        'picks.dtype.char\n',
        'picks.dtype\n',
        "info['ch_names'].index(picks)\n",
        "info['ch_names'].index(pick)\n",
        "info['ch_names']\n",
        'pick\n']},
                       'launch-id': None,
                       'sel-line': 22L,
                       'sel-line-start': 432L,
                       'selection_end': 432L,
                       'selection_start': 432L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 1248L,
                       'folded-linenos': [],
                       'history': {None: ['features2\n',
        'all_features\n',
        'all_data\n',
        "test_sub = all_data[all_data['Subjectid'] == 'YY40E']\n",
        'import mne\n',
        'eegchannels = test_sub.iloc[:, 0:7]\n',
        'eegchannels.head8\n',
        'eegchannels.head()\n',
        'test_sub.columns\n',
        'eegchannels.columns\n',
        'str(eegchannels.columns)\n',
        'list(eegchannels.columns)\n',
        'ch_names = list(eegchannels.columns)\nsfreq = 250\ninfo = mne.creat'\
        'e_info(ch_names, sfreq)\n\n# Finally, create the Raw object\nraw = '\
        'mne.io.RawArray(data, info)\n\n# Plot it!\nraw.plot()\n',
        "test_sub = all_data[all_data['Subjectid'] == 'YY40E']\neegchannels "\
        "= test_sub.iloc[:, 0:7]\nch_names = list(eegchannels.columns)\nsfre"\
        "q = 250\ninfo = mne.create_info(ch_names, sfreq)\n\n# Finally, crea"\
        "te the Raw object\nraw = mne.io.RawArray(eegchannels, info)\n\n# Pl"\
        "ot it!\nraw.plot()\n",
        'eegchannels.shape\n',
        '# Finally, create the Raw object\nraw = mne.io.RawArray(eegchannels'\
        '.T, info)\n\n# Plot it!\nraw.plot()\n',
        '\nstart, stop = raw.time_as_index([100, 115])  # 100 s to 115 s dat'\
        'a segment\ndata, times = raw[:, start:stop]\nprint(data.shape)\npri'\
        'nt(times.shape)\ndata, times = raw[2:20:3, start:stop]  # access un'\
        'derlying data\nraw.plot()\n',
        '\nstart, stop = raw.time_as_index([1000, 1150])  # 100 s to 115 s d'\
        'ata segment\ndata, times = raw[:, start:stop]\nprint(data.shape)\n'\
        'print(times.shape)\ndata, times = raw[2:20:3, start:stop]  # access'\
        ' underlying data\nraw.plot()\n',
        'data.plot()\n',
        'raw[2:20:3, start:stop].plot()\n',
        'type(raw)\n',
        'raw.plot(high_pass = 2)\n',
        'raw.plot(highpass = 2)\n',
        'raw.plot(highpass = 20)\n',
        'raw.plot(highpass =2.0 )\n',
        'raw.plot(highpass =2000.0 )\n',
        'raw.plot(highpass =200.0 )\n',
        'raw.plot(highpass =100.0 )\n',
        'eegchannels = test_sub.iloc[10000:, 0:7]\nch_names = list(eegchanne'\
        'ls.columns)\nsfreq = 250\ninfo = mne.create_info(ch_names, sfreq)\n'\
        '\n# Finally, create the Raw object\nraw = mne.io.RawArray(eegchanne'\
        'ls.T, info)\n\n# Plot it!\nraw.plot()\n',
        'raw.plot_psd()\n',
        "\nraw.plot_psd(area_mode='range', tmax=10.0, picks=['Ch1'])\n",
        "\nselection = mne.read_selection('Ch1')\npicks = mne.pick_types(raw"\
        ".info, meg=False, eeg=True eog=False,\n                       stim="\
        "False, selection=selection)\n",
        "selection = mne.read_selection('Ch1')\npicks = mne.pick_types(raw.i"\
        "nfo, meg=False, eeg=True eog=False, stim=False, selection=selection"\
        ")\n",
        "\nselection = mne.read_selection('Ch1')\npicks = mne.pick_types(raw"\
        ".info, meg=False, eeg=True, eog=False, stim=False, selection=select"\
        "ion)\n",
        'raw.ch_names\n',
        'picks = mne.pick_types(1, meg=False, eeg=True, eog=False, stim=Fals'\
        'e, selection=selection)\n',
        'picks = mne.pick_types(raw.info, meg=False, eeg=True, eog=False, st'\
        'im=False)\n',
        'raw\n',
        'raw.info\n',
        "raw.plot_psd(area_mode='range', tmax=10.0, picks=picks)\n",
        'test_sub\n',
        'test_sub.to_pickle("test2.pkl")\n',
        'type(test_sub)\n']},
                       'launch-id': None,
                       'sel-line': 1260L,
                       'sel-line-start': 66497L,
                       'selection_end': 66497L,
                       'selection_start': 66497L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': 'cmd-t243o40ayMK8zxfc'})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('../../Anaconda3/envs/ml/Lib/site-packages/mne/selection.py'),
        {'attrib-starts': [('read_selection',
                            21)],
         'first-line': 67L,
         'folded-linenos': [],
         'sel-line': 113L,
         'sel-line-start': 4045L,
         'selection_end': 4045L,
         'selection_start': 4045L,
         'zoom': 0L},
        1564139603.716],
        [loc('analysis_script.py'),
         {'attrib-starts': [],
          'first-line': 138L,
          'folded-linenos': [],
          'sel-line': 174L,
          'sel-line-start': 8060L,
          'selection_end': 8089L,
          'selection_start': 8089L,
          'zoom': 4L},
         1564139609.65],
        [loc('fiddling_script.py'),
         {'attrib-starts': [],
          'first-line': 10L,
          'folded-linenos': [],
          'sel-line': 29L,
          'sel-line-start': 862L,
          'selection_end': 919L,
          'selection_start': 862L,
          'zoom': 0L},
         1564139675.864],
        [loc('../../Anaconda3/envs/ml/Lib/site-packages/mne/io/pick.py'),
         {'attrib-starts': [('_picks_to_idx',
                             887)],
          'first-line': 913L,
          'folded-linenos': [],
          'sel-line': 938L,
          'sel-line-start': 33233L,
          'selection_end': 33233L,
          'selection_start': 33233L,
          'zoom': 0L},
         1564140246.334],
        [loc('analysis_script.py'),
         {'attrib-starts': [],
          'first-line': 138L,
          'folded-linenos': [],
          'sel-line': 174L,
          'sel-line-start': 8060L,
          'selection_end': 8089L,
          'selection_start': 8089L,
          'zoom': 4L},
         1564140247.63],
        [loc('fiddling_script.py'),
         {'attrib-starts': [],
          'first-line': 10L,
          'folded-linenos': [],
          'sel-line': 29L,
          'sel-line-start': 862L,
          'selection_end': 919L,
          'selection_start': 862L,
          'zoom': 0L},
         1564140291.562],
        [loc('../../Anaconda3/envs/ml/Lib/site-packages/mne/io/pick.py'),
         {'attrib-starts': [('_picks_to_idx',
                             887)],
          'first-line': 880L,
          'folded-linenos': [],
          'sel-line': 938L,
          'sel-line-start': 33233L,
          'selection_end': 33233L,
          'selection_start': 33233L,
          'zoom': 0L},
         1564140328.776],
        [loc('fiddling_script.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 15L,
          'sel-line-start': 350L,
          'selection_end': 421L,
          'selection_start': 421L,
          'zoom': 0L},
         1564140532.535],
        [loc('analysis_script.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 174L,
          'sel-line-start': 8060L,
          'selection_end': 8089L,
          'selection_start': 8089L,
          'zoom': 4L},
         1564140552.949],
        [loc('visualizations.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 13L,
          'sel-line-start': 534L,
          'selection_end': 593L,
          'selection_start': 592L,
          'zoom': 0L},
         1564140601.886],
        [loc('fiddling_script.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 3L,
          'sel-line-start': 95L,
          'selection_end': 105L,
          'selection_start': 105L,
          'zoom': 0L},
         1564140655.68],
        [loc('../../Anaconda3/envs/ml/Lib/site-packages/mne/io/pick.py'),
         {'attrib-starts': [('_picks_str_to_idx',
                             951)],
          'first-line': 977L,
          'folded-linenos': [],
          'sel-line': 994L,
          'sel-line-start': 35102L,
          'selection_end': 35102L,
          'selection_start': 35102L,
          'zoom': 0L},
         1564141104.835],
        [loc('../../Anaconda3/envs/ml/Lib/site-packages/mne/viz/raw.py'),
         {'attrib-starts': [('_set_psd_plot_params',
                             570)],
          'first-line': 578L,
          'folded-linenos': [],
          'sel-line': 600L,
          'sel-line-start': 26622L,
          'selection_end': 26622L,
          'selection_start': 26622L,
          'zoom': 0L},
         1564141109.921],
        (loc('analysis_script.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 174L,
          'sel-line-start': 8060L,
          'selection_end': 8089L,
          'selection_start': 8089L,
          'zoom': 4L},
         1564141115.983),
        [loc('../../Anaconda3/envs/ml/Lib/site-packages/mne/viz/raw.py'),
         {'attrib-starts': [('_set_psd_plot_params',
                             570)],
          'first-line': 563L,
          'folded-linenos': [],
          'sel-line': 600L,
          'sel-line-start': 26622L,
          'selection_end': 26622L,
          'selection_start': 26622L,
          'zoom': 0L},
         1564141126.962],
        [loc('fiddling_script.py'),
         {'attrib-starts': [],
          'first-line': 18L,
          'folded-linenos': [],
          'sel-line': 31L,
          'sel-line-start': 845L,
          'selection_end': 880L,
          'selection_start': 880L,
          'zoom': 0L},
         1564141138.297],
        [loc('../../Anaconda3/envs/ml/Lib/site-packages/mne/io/pick.py'),
         {'attrib-starts': [('_picks_to_idx',
                             887)],
          'first-line': 868L,
          'folded-linenos': [],
          'sel-line': 890L,
          'sel-line-start': 31631L,
          'selection_end': 31631L,
          'selection_start': 31631L,
          'zoom': 0L},
         1564141141.256],
        [loc('../../Anaconda3/envs/ml/Lib/site-packages/mne/viz/raw.py'),
         {'attrib-starts': [('_set_psd_plot_params',
                             570)],
          'first-line': 372L,
          'folded-linenos': [],
          'sel-line': 600L,
          'sel-line-start': 26622L,
          'selection_end': 26622L,
          'selection_start': 26622L,
          'zoom': 0L},
         1564141154.287],
        [loc('fiddling_script.py'),
         {'attrib-starts': [],
          'first-line': 18L,
          'folded-linenos': [],
          'sel-line': 29L,
          'sel-line-start': 784L,
          'selection_end': 838L,
          'selection_start': 838L,
          'zoom': 0L},
         1564141185.356],
        [loc('../../Anaconda3/envs/ml/Lib/site-packages/mne/io/pick.py'),
         {'attrib-starts': [('_picks_str_to_idx',
                             951)],
          'first-line': 957L,
          'folded-linenos': [],
          'sel-line': 1029L,
          'sel-line-start': 36558L,
          'selection_end': 36558L,
          'selection_start': 36558L,
          'zoom': 0L},
         1564141198.915]],
        20),
        'current-loc': loc('fiddling_script.py'),
        'editor-state-list': [(loc('analysis_script.py'),
                               {'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 174L,
                                'sel-line-start': 8060L,
                                'selection_end': 8089L,
                                'selection_start': 8089L,
                                'zoom': 4L}),
                              (loc('arduino_parser.py'),
                               {'attrib-starts': [('parse_arduino_file',
        17)],
                                'first-line': 15L,
                                'folded-linenos': [],
                                'sel-line': 18L,
                                'sel-line-start': 639L,
                                'selection_end': 639L,
                                'selection_start': 639L,
                                'zoom': 0L}),
                              (loc('../../Anaconda3/envs/ml/Lib/site-packages/neurokit/bio/bio_eda.py'),
                               {'attrib-starts': [('eda_scr',
        332)],
                                'first-line': 394L,
                                'folded-linenos': [],
                                'sel-line': 410L,
                                'sel-line-start': 15554L,
                                'selection_end': 15554L,
                                'selection_start': 15554L,
                                'zoom': 0L}),
                              (loc('bitalino_parser.py'),
                               {'attrib-starts': [('parse_bitalino_file',
        26)],
                                'first-line': 28L,
                                'folded-linenos': [],
                                'sel-line': 64L,
                                'sel-line-start': 2732L,
                                'selection_end': 2734L,
                                'selection_start': 2734L,
                                'zoom': 0L}),
                              (loc('EEG_parser.py'),
                               {'attrib-starts': [('parse_matlab_file',
        15)],
                                'first-line': 15L,
                                'folded-linenos': [],
                                'sel-line': 31L,
                                'sel-line-start': 1349L,
                                'selection_end': 1353L,
                                'selection_start': 1353L,
                                'zoom': 0L}),
                              (loc('fiddling_script.py'),
                               {'attrib-starts': [],
                                'first-line': 18L,
                                'folded-linenos': [],
                                'sel-line': 29L,
                                'sel-line-start': 784L,
                                'selection_end': 836L,
                                'selection_start': 836L,
                                'zoom': 0L}),
                              (loc('Peripheral_analyser.py'),
                               {'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 5L,
                                'sel-line-start': 99L,
                                'selection_end': 113L,
                                'selection_start': 113L,
                                'zoom': 0L}),
                              (loc('../../Anaconda3/envs/ml/Lib/site-packages/mne/io/pick.py'),
                               {'attrib-starts': [('_picks_str_to_idx',
        951)],
                                'first-line': 957L,
                                'folded-linenos': [],
                                'sel-line': 1029L,
                                'sel-line-start': 36558L,
                                'selection_end': 36558L,
                                'selection_start': 36558L,
                                'zoom': 0L}),
                              (loc('psychopy_parser.py'),
                               {'attrib-starts': [('parse_psychopy_file',
        25)],
                                'first-line': 30L,
                                'folded-linenos': [],
                                'sel-line': 41L,
                                'sel-line-start': 1479L,
                                'selection_end': 1479L,
                                'selection_start': 1479L,
                                'zoom': 2L}),
                              (loc('visualizations.py'),
                               {'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 13L,
                                'sel-line-start': 534L,
                                'selection_end': 593L,
                                'selection_start': 592L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('analysis_script.py'),
         loc('arduino_parser.py'),
         loc('../../Anaconda3/envs/ml/Lib/site-packages/neurokit/bio/bio_eda.py'),
         loc('bitalino_parser.py'),
         loc('EEG_parser.py'),
         loc('fiddling_script.py'),
         loc('Peripheral_analyser.py'),
         loc('../../Anaconda3/envs/ml/Lib/site-packages/mne/io/pick.py'),
         loc('psychopy_parser.py'),
         loc('visualizations.py')]),
                               'open_files': [u'Peripheral_analyser.py',
        u'arduino_parser.py',
        u'bitalino_parser.py',
        u'psychopy_parser.py',
        u'../../Anaconda3/envs/ml/Lib/site-packages/neurokit/bio/bio_eda.py',
        u'EEG_parser.py',
        u'visualizations.py',
        u'analysis_script.py',
        u'fiddling_script.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5132496513249651},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (0,
                         -1,
                         3860,
                         2119)}]}
guimgr.recent-documents = [loc('fiddling_script.py'),
                           loc('../../Anaconda3/envs/ml/Lib/site-packages/mne/io/pick.py'),
                           loc('../../Anaconda3/envs/ml/Lib/site-packages/mne/viz/raw.py'),
                           loc('analysis_script.py'),
                           loc('visualizations.py'),
                           loc('EEG_parser.py'),
                           loc('../../Anaconda3/envs/ml/Lib/site-packages/neurokit/bio/bio_eda.py'),
                           loc('Peripheral_analyser.py'),
                           loc('arduino_parser.py'),
                           loc('psychopy_parser.py'),
                           loc('bitalino_parser.py')]
guimgr.visual-state = {loc('../../Anaconda3/Lib/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame',
                          100),
                         ('NDFrame._get_item_cache',
                          2480)],
        'first-line': 2478L,
        'folded-linenos': [],
        'sel-line': 2483L,
        'sel-line-start': 87781L,
        'selection_end': 87781L,
        'selection_start': 87781L,
        'zoom': 0L},
                       loc('../../Anaconda3/Lib/site-packages/scipy/io/matlab/mio.py'): {'a'\
        'ttrib-starts': [('mat_reader_factory',
                          43)],
        'first-line': 6L,
        'folded-linenos': [],
        'sel-line': 70L,
        'sel-line-start': 2055L,
        'selection_end': 2055L,
        'selection_start': 2055L,
        'zoom': 0L},
                       loc('../../Anaconda3/envs/ml/Lib/pickle.py'): {'attri'\
        'b-starts': [('_Unpickler',
                      985),
                     ('_Unpickler.find_class',
                      1380)],
        'first-line': 1363L,
        'folded-linenos': [],
        'sel-line': 1387L,
        'sel-line-start': 49446L,
        'selection_end': 49446L,
        'selection_start': 49446L,
        'zoom': 0L},
                       loc('../../Anaconda3/envs/ml/Lib/site-packages/matplotlib/axes/_base.py'): {'a'\
        'ttrib-starts': [('_process_plot_var_args',
                          142),
                         ('_process_plot_var_args._xy_from_xy',
                          212)],
        'first-line': 217L,
        'folded-linenos': [],
        'sel-line': 241L,
        'sel-line-start': 8035L,
        'selection_end': 8035L,
        'selection_start': 8035L,
        'zoom': 0L},
                       loc('../../Anaconda3/envs/ml/Lib/site-packages/pandas/core/apply.py'): {'a'\
        'ttrib-starts': [('FrameApply',
                          31),
                         ('FrameApply.apply_series_generator',
                          252)],
        'first-line': 249L,
        'folded-linenos': [],
        'sel-line': 276L,
        'sel-line-start': 9078L,
        'selection_end': 9078L,
        'selection_start': 9078L,
        'zoom': 0L},
                       loc('../../Anaconda3/envs/ml/Lib/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame',
                          101),
                         ('NDFrame.__getattr__',
                          4361)],
        'first-line': 4370L,
        'folded-linenos': [],
        'sel-line': 4375L,
        'sel-line-start': 150289L,
        'selection_end': 150289L,
        'selection_start': 150289L,
        'zoom': 2L},
                       loc('../../Anaconda3/envs/ml/Lib/site-packages/pandas/core/indexes/base.py'): {'a'\
        'ttrib-starts': [('Index',
                          182),
                         ('Index.__hash__',
                          2060)],
        'first-line': 2056L,
        'folded-linenos': [],
        'sel-line': 2061L,
        'sel-line-start': 69200L,
        'selection_end': 69200L,
        'selection_start': 69200L,
        'zoom': 0L},
                       loc('../../Anaconda3/envs/ml/Lib/site-packages/pandas/core/indexing.py'): {'a'\
        'ttrib-starts': [('_NDFrameIndexer',
                          87),
                         ('_NDFrameIndexer._convert_to_indexer',
                          1224)],
        'first-line': 1307L,
        'folded-linenos': [],
        'sel-line': 1326L,
        'sel-line-start': 48427L,
        'selection_end': 48427L,
        'selection_start': 48427L,
        'zoom': 0L},
                       loc('../../Anaconda3/envs/ml/Lib/site-packages/pandas/core/internals.py'): {'a'\
        'ttrib-starts': [('BlockManager',
                          3209),
                         ('BlockManager.set',
                          4207)],
        'first-line': 4223L,
        'folded-linenos': [],
        'sel-line': 4238L,
        'sel-line-start': 144917L,
        'selection_end': 144917L,
        'selection_start': 144917L,
        'zoom': 0L},
                       loc('../../Anaconda3/envs/ml/Lib/site-packages/pandas/core/tools/datetimes.py'): {'a'\
        'ttrib-starts': [('to_time',
                          652),
                         ('to_time._convert_listlike',
                          681)],
        'first-line': 709L,
        'folded-linenos': [],
        'sel-line': 732L,
        'sel-line-start': 25983L,
        'selection_end': 25983L,
        'selection_start': 25983L,
        'zoom': 0L},
                       loc('../../Anaconda3/envs/ml/Lib/site-packages/scipy/signal/filter_design.py'): {'a'\
        'ttrib-starts': [('iirfilter',
                          1851)],
        'first-line': 1973L,
        'folded-linenos': [],
        'sel-line': 1986L,
        'sel-line-start': 65485L,
        'selection_end': 65485L,
        'selection_start': 65485L,
        'zoom': 0L},
                       loc('ECG_analyser.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 218L,
        'selection_end': 218L,
        'selection_start': 218L,
        'zoom': 0L},
                       loc('EEG_parser.py'): {'attrib-starts': [('parse_matl'\
        'ab_file',
        10)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 11L,
        'sel-line-start': 364L,
        'selection_end': 404L,
        'selection_start': 404L,
        'zoom': 0L},
                       loc('README.md'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 335L,
        'selection_end': 390L,
        'selection_start': 390L,
        'zoom': 0L},
                       loc('analysis_script.py'): {'attrib-starts': [],
        'first-line': 39L,
        'folded-linenos': [],
        'sel-line': 40L,
        'sel-line-start': 1318L,
        'selection_end': 1419L,
        'selection_start': 1318L,
        'zoom': 4L},
                       loc('arduino_parser.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 34L,
        'selection_end': 72L,
        'selection_start': 72L,
        'zoom': 0L},
                       loc('bitalino_parser.py'): {'attrib-starts': [('parse'\
        '_bitalino_directory',
        10)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 800L,
        'selection_end': 866L,
        'selection_start': 866L,
        'zoom': 0L},
                       loc('opensignals_reader.py'): {'attrib-starts': [('Op'\
        'enSignalsFileReader',
        20)],
        'first-line': 42L,
        'folded-linenos': [],
        'sel-line': 66L,
        'sel-line-start': 1245L,
        'selection_end': 1245L,
        'selection_start': 1245L,
        'zoom': 0L},
                       loc('../python-opensignals-file-reader/opensignalsfilereader.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 50L,
        'folded-linenos': [],
        'sel-line': 64L,
        'sel-line-start': 1159L,
        'selection_end': 1448L,
        'selection_start': 1159L,
        'zoom': 0L}}
proj.pyexec = {None: ('custom',
                      u'c:\\Users\\ilkka\\Anaconda3\\envs\\ml\\python.exe')}
search.replace-history = [u'psychopy_data']
search.search-history = [u'psyd',
                         u't',
                         u'muf']
testing.stored-results = (1,
                          [],
                          {})
versioncontrol.git.remote-history = ['git@github.com:BasalGanglia/booth_anal'\
                                     'ysis.git']
