#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.breakpoints = {loc('analysis_script.py'): {27L: (0,
        None,
        1,
        0)}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'QZfaVazMN6F17Nd18ha3Psrntc'\
        'zvnm91',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(0,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../Anaconda3/Lib/site-packages/sklearn/linear_model/base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../Anaconda3/Lib/site-packages/sklearn/linear_model/base.py'),
                      'center_data')]},
        loc('../../Anaconda3/Lib/socket.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../Anaconda3/Lib/socket.py'),
                      'create_connection')]},
        loc('../../Anaconda3/envs/twisted/Lib/site-packages/twisted/web/http.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../Anaconda3/envs/twisted/Lib/site-packages/twisted/web/http.py'),
                      'CACHED')]},
        loc('../../Anaconda3/lib/site-packages/sklearn/base.py'): {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../Anaconda3/lib/site-packages/sklearn/base.py'),
                      'BaseEstimator')]},
        loc('../../Anaconda3/lib/site-packages/sklearn/utils/validation.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../Anaconda3/lib/site-packages/sklearn/utils/validation.py'),
                      'assert_all_finite')]},
        loc('../handson-ml/my_version.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../handson-ml/my_version.py'),
                             'CHAPTER_ID')]],
        'top-node': [('generic attribute',
                      loc('../handson-ml/my_version.py'),
                      'CHAPTER_ID')]},
        loc('../myhandson/myscript.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../myhandson/myscript.py'),
                      'abba')]},
        loc('../sod_empatica/final_empatica.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../sod_empatica/final_empatica.py'),
                             'the_logger')]],
        'top-node': [('generic attribute',
                      loc('../sod_empatica/final_empatica.py'),
                      'args')]},
        loc('../twisted_book/dynamic_content.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../twisted_book/echoclient.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../twisted_book/echoclient.py'),
                      'EchoClient')]},
        loc('../twisted_book/echoserver.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../twisted_book/echoserver.py'),
                      'Echo')]},
        loc('../twisted_book/headlineRetriever.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../twisted_book/headlineRetriever.py'),
                      'd')]},
        loc('../twisted_book/print_resource.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../twisted_book/print_resource.py'),
                      'd')]},
        loc('../twisted_book/quoteserver.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../twisted_book/static_content.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../twisted_book/static_content.py'),
                      'factory')]},
        loc('unknown:<untitled> #8'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #7'): {'expanded-nodes': [],
                                       'selected-nodes': [None],
                                       'top-node': None}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [6,
                          4],
        'notebook_display': 'normal',
        'notebook_percent': 0.4555497106785902,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('versioncontrol.git',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 0L,
                       'sel-line-start': 0L,
                       'selection_end': 0L,
                       'selection_start': 0L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 833L,
                       'folded-linenos': [],
                       'history': {None: ['DATA_ROOT_DIR = "C:\\\\Users\\\\'\
        'ilkka\\\\data\\\\Booth\\\\experiment\\\\"\n\nEXAMPLE_DIR = DATA_ROO'\
        'T_DIR + "example"\nARDUINO_DIR = EXAMPLE_DIR + "\\\\arduino\\\\"\n'\
        'BITALINO_DIR = EXAMPLE_DIR + "\\\\bitalino\\\\"\n\n# The following '\
        'silly snippet might be needed when running\n#  stuff in Wing IDE py'\
        'thon shell which seems not to default\n#  into the project working '\
        'directory\nimport os\nos.chdir("C:\\\\Users\\\\ilkka\\\\code\\\\boo'\
        'th_analysis")\n\nimport h5py\n# from arduino_parser import parse_ar'\
        'duino_file\n\nimport arduino_parser\nimport bitalino_parser\nimport'\
        ' opensignals_reader\n\nimport imp\nimp.reload(arduino_parser)\nimp.'\
        'reload(bitalino_parser)\n# arduino_data = arduino_parser.parse_ardu'\
        'ino_directory(ARDUINO_DIR)\nbitalino_data2 = bitalino_parser.parse_'\
        'bitalino_directory(BITALINO_DIR)\n',
        'bitalino_data2 = bitalino_parser.parse_bitalino_directory(BITALINO_'\
        'DIR)\n',
        'imp.reload(bitalino_parser)\n# arduino_data = arduino_parser.parse_'\
        'arduino_directory(ARDUINO_DIR)\nbitalino_data2 = bitalino_parser.pa'\
        'rse_bitalino_directory(BITALINO_DIR)\n\n',
        'imp.reload(bitalino_parser)\n# arduino_data = arduino_parser.parse_'\
        'arduino_directory(ARDUINO_DIR)\nbitalino_data2 = bitalino_parser.pa'\
        'rse_bitalino_directory(BITALINO_DIR)\n\n\n',
        'bitalino_data2.head_information[0]\n',
        "bitalino_data2.head_information['0']\n",
        'type(bitaliano_data2.head_information)\n',
        '\ntype(bitalino_data2.head_information2)\n',
        '\ntype(bitalino_data2.head_information\n',
        'bitalino_data2\n',
        'bitalino_data2.head_information\n',
        'type(bitalino_data2.head_information)\n',
        "type(bitalino_data2.head_information['20:16:12:22:45:57'])\n",
        "bitalino_data2.head_information['20:16:12:22:45:57']\n",
        'bitalino_data2.len\n',
        'bitalino_data2.len()\n',
        'len(bitalino_data2)\n',
        'len(bitalino_data2.head_information)\n',
        'bitalino_data2.head_information.keys\n',
        'str(bitalino_data2.head_information.keys)\n',
        'next(iter(bitalino_data2.head_information))\n',
        'imp.reload(bitalino_parser)\n# arduino_data = arduino_parser.parse_'\
        'arduino_directory(ARDUINO_DIR)\nbitalino_data2 = bitalino_parser.pa'\
        'rse_bitalino_directory(BITALINO_DIR)\n',
        'puf.header\n',
        'puf.header()\n',
        "puf.header['sensor']\n",
        'puf.timestamp\n',
        'puf.bitalino_header()\n',
        'puf\n',
        'puf.head()\n',
        'imp.reload(bitalino_parser)\npuf = bitalino_parser.parse_bitalino_d'\
        'irectory(BITALINO_DIR)\n',
        'puf.head(9)\n',
        'import matplotlib as plt\n',
        'plt(puf[1:100, 1])\n',
        'plt(puf.iloc[1:100, 1])\n',
        'import matplotlib.pyplot as plt\n',
        'plt.plot(puf.iloc[1:100, 1])\n',
        'plt.show()\n',
        'plt.plot(puf.iloc[1:10000, 1])\n',
        'plt.plot(puf.iloc[1:100000, 1])\n',
        'plt.plot(puf.iloc[1:1000, 0])\n',
        'plt.plot(puf.iloc[1:10000, 0])\n',
        'puf.bitalino_header\n',
        'puf.bitalino_header.timestamp\n']},
                       'launch-id': None,
                       'sel-line': 906L,
                       'sel-line-start': 52990L,
                       'selection_end': 52990L,
                       'selection_start': 52990L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': 'cmd-t243o40ayMK8zxfc'})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('bitalino_parser.py'),
        {'attrib-starts': [('parse_bitalino_file',
                            16)],
         'first-line': 12L,
         'folded-linenos': [],
         'sel-line': 32L,
         'sel-line-start': 1224L,
         'selection_end': 1290L,
         'selection_start': 1290L,
         'zoom': 0L},
        1555422089.468],
        [loc('analysis_script.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 21L,
          'sel-line-start': 606L,
          'selection_end': 697L,
          'selection_start': 606L,
          'zoom': 1L},
         1555422148.52],
        [loc('bitalino_parser.py'),
         {'attrib-starts': [('parse_bitalino_file',
                             16)],
          'first-line': 12L,
          'folded-linenos': [],
          'sel-line': 32L,
          'sel-line-start': 1224L,
          'selection_end': 1226L,
          'selection_start': 1226L,
          'zoom': 0L},
         1555422197.257],
        [loc('analysis_script.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 21L,
          'sel-line-start': 606L,
          'selection_end': 697L,
          'selection_start': 606L,
          'zoom': 1L},
         1555422223.652],
        [loc('bitalino_parser.py'),
         {'attrib-starts': [('parse_bitalino_file',
                             16)],
          'first-line': 12L,
          'folded-linenos': [],
          'sel-line': 36L,
          'sel-line-start': 1334L,
          'selection_end': 1434L,
          'selection_start': 1434L,
          'zoom': 0L},
         1555422278.448],
        [loc('analysis_script.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 21L,
          'sel-line-start': 606L,
          'selection_end': 697L,
          'selection_start': 606L,
          'zoom': 1L},
         1555422307.482],
        [loc('bitalino_parser.py'),
         {'attrib-starts': [('parse_bitalino_file',
                             16)],
          'first-line': 12L,
          'folded-linenos': [],
          'sel-line': 36L,
          'sel-line-start': 1334L,
          'selection_end': 1427L,
          'selection_start': 1427L,
          'zoom': 0L},
         1555422326.057],
        [loc('analysis_script.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 21L,
          'sel-line-start': 606L,
          'selection_end': 697L,
          'selection_start': 606L,
          'zoom': 1L},
         1555422334.281],
        [loc('bitalino_parser.py'),
         {'attrib-starts': [('parse_bitalino_file',
                             16)],
          'first-line': 12L,
          'folded-linenos': [],
          'sel-line': 36L,
          'sel-line-start': 1334L,
          'selection_end': 1433L,
          'selection_start': 1433L,
          'zoom': 0L},
         1555422339.37],
        [loc('analysis_script.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 21L,
          'sel-line-start': 606L,
          'selection_end': 697L,
          'selection_start': 606L,
          'zoom': 1L},
         1555422349.556],
        [loc('bitalino_parser.py'),
         {'attrib-starts': [('parse_bitalino_file',
                             16)],
          'first-line': 12L,
          'folded-linenos': [],
          'sel-line': 36L,
          'sel-line-start': 1334L,
          'selection_end': 1433L,
          'selection_start': 1433L,
          'zoom': 0L},
         1555422356.488],
        [loc('analysis_script.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 21L,
          'sel-line-start': 606L,
          'selection_end': 697L,
          'selection_start': 606L,
          'zoom': 1L},
         1555422416.225],
        [loc('../../Anaconda3/Lib/site-packages/pandas/core/generic.py'),
         {'attrib-starts': [('NDFrame',
                             100),
                            ('NDFrame._get_item_cache',
                             2480)],
          'first-line': 2478L,
          'folded-linenos': [],
          'sel-line': 2483L,
          'sel-line-start': 87781L,
          'selection_end': 87781L,
          'selection_start': 87781L,
          'zoom': 0L},
         1555422569.86],
        [loc('analysis_script.py'),
         {'attrib-starts': [],
          'first-line': 9L,
          'folded-linenos': [],
          'sel-line': 28L,
          'sel-line-start': 942L,
          'selection_end': 945L,
          'selection_start': 945L,
          'zoom': 1L},
         1555422577.536],
        [loc('bitalino_parser.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 7L,
          'sel-line-start': 349L,
          'selection_end': 360L,
          'selection_start': 360L,
          'zoom': 0L},
         1555422716.989],
        [loc('analysis_script.py'),
         {'attrib-starts': [],
          'first-line': 9L,
          'folded-linenos': [],
          'sel-line': 28L,
          'sel-line-start': 942L,
          'selection_end': 945L,
          'selection_start': 945L,
          'zoom': 1L},
         1555422721.632],
        [loc('arduino_parser.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 3L,
          'sel-line-start': 34L,
          'selection_end': 72L,
          'selection_start': 72L,
          'zoom': 0L},
         1555422773.376],
        [loc('analysis_script.py'),
         {'attrib-starts': [],
          'first-line': 9L,
          'folded-linenos': [],
          'sel-line': 27L,
          'sel-line-start': 920L,
          'selection_end': 960L,
          'selection_start': 960L,
          'zoom': 1L},
         1555423085.357],
        [loc('README.md'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 4L,
          'sel-line-start': 247L,
          'selection_end': 290L,
          'selection_start': 290L,
          'zoom': 0L},
         1555423191.853],
        [loc('analysis_script.py'),
         {'attrib-starts': [],
          'first-line': 9L,
          'folded-linenos': [],
          'sel-line': 27L,
          'sel-line-start': 920L,
          'selection_end': 961L,
          'selection_start': 961L,
          'zoom': 1L},
         1555423192.118]],
        20),
        'current-loc': loc('analysis_script.py'),
        'editor-state-list': [(loc('analysis_script.py'),
                               {'attrib-starts': [],
                                'first-line': 9L,
                                'folded-linenos': [],
                                'sel-line': 16L,
                                'sel-line-start': 513L,
                                'selection_end': 535L,
                                'selection_start': 535L,
                                'zoom': 1L}),
                              (loc('arduino_parser.py'),
                               {'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 3L,
                                'sel-line-start': 34L,
                                'selection_end': 72L,
                                'selection_start': 72L,
                                'zoom': 0L}),
                              (loc('bitalino_parser.py'),
                               {'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 7L,
                                'sel-line-start': 349L,
                                'selection_end': 360L,
                                'selection_start': 360L,
                                'zoom': 0L}),
                              (loc('../../Anaconda3/Lib/site-packages/pandas/core/generic.py'),
                               {'attrib-starts': [('NDFrame',
        100),
        ('NDFrame._get_item_cache',
         2480)],
                                'first-line': 2478L,
                                'folded-linenos': [],
                                'sel-line': 2483L,
                                'sel-line-start': 87781L,
                                'selection_end': 87781L,
                                'selection_start': 87781L,
                                'zoom': 0L}),
                              (loc('README.md'),
                               {'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 4L,
                                'sel-line-start': 247L,
                                'selection_end': 290L,
                                'selection_start': 290L,
                                'zoom': 0L})],
        'has-focus': False,
        'locked': False},
        [loc('analysis_script.py'),
         loc('arduino_parser.py'),
         loc('bitalino_parser.py'),
         loc('../../Anaconda3/Lib/site-packages/pandas/core/generic.py'),
         loc('README.md')]),
                               'open_files': [u'bitalino_parser.py',
        u'arduino_parser.py',
        u'README.md',
        u'analysis_script.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.616376306620209},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (-17,
                         328,
                         3860,
                         2119)}]}
guimgr.recent-documents = [loc('analysis_script.py'),
                           loc('README.md'),
                           loc('arduino_parser.py'),
                           loc('bitalino_parser.py'),
                           loc('../../Anaconda3/Lib/site-packages/pandas/core/generic.py')]
guimgr.visual-state = {loc('arduino_parser.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('opensignals_reader.py'): {'attrib-starts': [('Op'\
        'enSignalsFileReader',
        20)],
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 66L,
        'sel-line-start': 1245L,
        'selection_end': 1245L,
        'selection_start': 1245L,
        'zoom': 0L},
                       loc('../python-opensignals-file-reader/opensignalsfilereader.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 50L,
        'folded-linenos': [],
        'sel-line': 64L,
        'sel-line-start': 1159L,
        'selection_end': 1448L,
        'selection_start': 1159L,
        'zoom': 0L}}
proj.pyexec = {None: ('custom',
                      u'c:\\Users\\ilkka\\Anaconda3\\envs\\ml\\python.exe')}
testing.stored-results = (1,
                          [],
                          {})
versioncontrol.git.remote-history = ['git@github.com:BasalGanglia/booth_anal'\
                                     'ysis.git']
